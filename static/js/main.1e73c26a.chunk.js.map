{"version":3,"sources":["components/Header.js","components/About.js","components/Home.js","components/Bubbles.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","headerRef","React","createRef","scroll","y","window","pageYOffset","document","documentElement","scrollTop","body","state","e","setState","console","log","addEventListener","_onScroll","bind","react_default","a","createElement","className","ref","style","background","concat","process","position","children","Component","About","seconds","Date","getTime","toFixed","toString","replace","id","alt","src","Home","components_Header","lib","to","components_About","Bubbles","left","x","top","transform","size","getRandomArbitrary","min","max","Math","random","App","bubbles","currTime","lastBubbleStamp","direction","push","clientX","clientY","lastTurnTime","lastGrowTime","clearInterval","interval","newBubbles","map","bubble","filter","setInterval","updateBubbles","i","src_components_Bubbles","key","onMouseMove","_onMouseMove","components_Home","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","basename","Switch","Route","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e73c26a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\n\n// TODO fix onscroll bullshit, make bg attached to page \n// https://stackoverflow.com/questions/21786272/css-background-size-cover-background-attachment-fixed-clipping-background-im\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.headerRef = React.createRef();\n        let scroll = {\n            y: window.pageYOffset ? document.documentElement.scrollTop : document.body.scrollTop\n        };\n        this.state = { scrollTop: scroll.y };\n    }\n\n    _onScroll(e) {\n        let scroll = {\n            y: window.pageYOffset ? document.documentElement.scrollTop : document.body.scrollTop\n        };\n        this.setState({ scrollTop: scroll.y });\n        console.log(scroll.y);\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this._onScroll.bind(this));\n    }\n\n    render() {\n        return (\n            <header className={this.props.className + \" intro-header\"} ref={this.headerRef}>\n                <div className=\"headerBG\" style={{\n                    background: `url(\"${process.env.PUBLIC_URL + '/images/header.jpeg'}\") no-repeat scroll center / cover`,\n                    // backgroundColor: 'rgba(102, 129, 147, 0.4)',\n                    // backgroundBlendMode: 'multiply'\n                    position: 'fixed'\n                    // backgroundPositionY: this.state.scrollTop\n                }} >\n\n                </div>\n                <div className=\"headerShadow\"></div>\n                {this.props.children}\n            </header >\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../App.css';\n\n\nclass About extends Component {\n    render() {\n        const seconds = ((new Date() - new Date(\"04/26/1994\").getTime()) / 1000).toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n        return (\n            <div className='aboutmeWrapper homePageSection' id=\"about\">\n                <section className='aboutmeSection'>\n                    <h2 className=\"pageTitle\">Karen's 26th Birthday</h2>\n                    <h4 className='seconds'>Fun fact! You are currently <strong>{seconds}</strong> seconds old!</h4>\n                    <div className=\"aboutProfilePicWrapper\">\n                        <img className=\"aboutProfilePic\" alt=\"profile\" src={process.env.PUBLIC_URL + \"/images/karen.jpeg\"} />\n                    </div>\n                    <h3 className='titleName'>To my favorite person,</h3>\n                    <p className='aboutme'>\n                        Karen, a year ago when I first met you, you told me that you are taking a bootcamp to learn how to program. My first thoughts were \"ugh you too huh?\", but as I talked to you more about it I could see this deep passion for engineering. Even at that moment I could tell you are someone who does not give up on their dreams and truly believe in using engineering to help improve the world.\n                    </p>\n                    <p className='aboutme'>\n                        Half a year ago when I first started trying to teach you, I saw this passion for learning that's rare to find even amongst people who are already engineers. At this point we first started trying algos. You were completely lost but never gave up hope.\n                    </p>\n                    <p className='aboutme'>\n                        4 months ago you told me that this has been the hardest time in your life. Yet even on the hardest days you never gave up, and you never lost your passion to learn.\n                    </p>\n\n                    <p className='aboutme'>\n                        Since I've been back and you've quit Apple, you finally had time to dedicate to studying, and in 3 short months you've gone from barely knowing how to write a function to crushing leetcode mediums! You come up with algos better than mine sometimes now!\n                    </p>\n\n                    <p className='aboutme'>\n                        Now look at yourself. You are crushing it at algo and are designing beautiful websites.\n                    </p>\n                    <p className='aboutme'>\n                        I'm incredibly proud of all the progress we've made in the past months. I regret not coming back to SF earlier, but I am so glad to have had the opportunity to be on this journey with you. We're in the final stretch now and I have no doubts that you'll make an amazing frontend eng very very soon!\n                    </p>\n                    <p className='aboutme'>\n                        2020 has been a hell of a trip, but this will be your year to shine. Let's make 26 into the best time in your life so far!\n                    </p>\n                    <p className='aboutme'>\n                        Happy birthday to the the prettiest and smortest new frontend engineer the world has ever seen!\n                    </p>\n                </section>\n\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport Header from './Header.js';\nimport About from './About.js';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"home\" id=\"home\">\n                <Header className=\"home-header\">\n                    <div className=\"container h-100\">\n                        <div className=\"row h-100 align-items-center\">\n                            <div className=\"col\">\n                                <div className=\"title\">\n                                    <h1>HAPPY BIRTHDAY</h1>\n                                    <h2>KAREN SIN</h2>\n                                    <h4>React Master | Algo Genius | Super Fun | Cute AF</h4>\n                                    <Link to=\"/#projects\" className=\"btn collab-btn\"><i className=\"\"></i>Learn more about my birthday</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <section className=\"scrolldown\"><Link to=\"/#projects\">\n                        <i className=\"fas fa-angle-double-down\"></i>\n                    </Link>\n                    </section>\n                </Header>\n                <div className=\"homeContent\">\n                    <div className=\"projBGBG\" style={{\n                        background: `url(\"${process.env.PUBLIC_URL + '/images/projects_background.jpg'}\") no-repeat center / cover`\n                    }}>\n                        <div className=\"projBGShadow\">\n                            <img alt=\"background\" className=\"projBG\" src={process.env.PUBLIC_URL + '/images/projects_background.jpg'}></img>\n                        </div>\n                    </div>\n                    {/* <Projects /> */}\n                    <About />\n                    {/* <Resume /> */}\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './Bubbles.css';\n\nclass Bubbles extends Component {\n  render() {\n    return (\n      <div className=\"bubble\" style={{\n        left: this.props.x,\n        top: this.props.y,\n        transform: 'scale(' + this.props.size + ')'\n      }}>\n      </div>\n    );\n  }\n}\n\nexport default Bubbles;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Home from './components/Home.js';\nimport Bubbles from './components/Bubbles.js';\n\n\nconst bubbleMoveSpeed = 2.5;\nconst minBubbleTime = 50;\nconst maxBubbleTime = 1000;\nconst minBubbleSize = 0.02;\nconst maxBubbleSize = 0.14;\nconst jitterSpeed = 0.3;\nconst minJitterUTurn = 2000;\nconst maxJitterUTurn = 6000;\nconst minGrowthTime = 100;\nconst maxGrowthTime = 200;\nconst minGrowthRate = 0.001;\nconst maxGrowthRate = 0.003;\nfunction getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: 0,\n            y: 0,\n            bubbles: []\n        };\n    }\n\n    _onMouseMove(e) {\n        const currTime = + new Date();\n        if (currTime > this.state.lastBubbleStamp + getRandomArbitrary(minBubbleTime, maxBubbleTime)) {\n            const direction = Math.random() > 0.5 ? -1 : 1;\n            this.state.bubbles.push({ x: e.clientX, y: e.clientY, size: getRandomArbitrary(minBubbleSize, maxBubbleSize), direction: direction, lastTurnTime: currTime, lastGrowTime: currTime });\n            this.setState({ lastBubbleStamp: currTime });\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    updateBubbles() {\n        if (this.state) {\n            const currTime = + new Date();\n            const newBubbles = this.state.bubbles.map(bubble => {\n                let direction = bubble.direction;\n                let lastTurnTime = bubble.lastTurnTime;\n                let lastGrowTime = bubble.lastGrowTime;\n                let size = bubble.size;\n                if (currTime > lastTurnTime + getRandomArbitrary(minJitterUTurn, maxJitterUTurn)) {\n                    direction = -direction;\n                    lastTurnTime = currTime;\n                }\n                if (currTime > lastGrowTime + getRandomArbitrary(minGrowthTime, maxGrowthTime)) {\n                    lastGrowTime = currTime;\n                    size += getRandomArbitrary(minGrowthRate, maxGrowthRate);\n                }\n                if (bubble.y < 0) {\n                    return null;\n                }\n                return {\n                    x: bubble.x + direction * jitterSpeed,\n                    y: bubble.y - bubbleMoveSpeed,\n                    size: size,\n                    direction: direction,\n                    lastTurnTime: lastTurnTime,\n                    lastGrowTime: lastGrowTime\n                }\n            }).filter(bubble => {\n                return bubble !== null\n            });\n            this.setState({ bubbles: newBubbles });\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ lastBubbleStamp: + new Date() });\n        this.interval = setInterval(this.updateBubbles.bind(this), 20);\n    }\n\n    render() {\n        const bubbles = this.state.bubbles.map((bubble, i) => {\n            return <Bubbles x={bubble.x} y={bubble.y} size={bubble.size} key={i} />\n        });\n        return (\n            <div className=\"App\" onMouseMove={this._onMouseMove.bind(this)}>\n                <div className=\"bob\">\n                    {bubbles}\n                </div>\n                {/* <Nav /> */}\n                <Home />\n                {/* <Contacts /> */}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/portfolio2019\">\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n    </Switch>\n  </BrowserRouter>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}